1, OSI七层模型和TCP/IP协议四层模式

	层次(level): 模块
		应用层:  负责应用协议
		
		传输层:  规定数据在网络中是怎样传输的
			TCP: Transport Control Protocol传输控制协议，是一种面向连接的传输层协议。
				 在通信之前要先建立连接  ==> "三次握手"
				 它能提供高可靠性通信(即数据无误，数据无丢失，数据无失序，数据无重复)
				 why? 
				 
			UDP: User Datagram Protocol 用户数据协议
				 不需要连接，也没有握手
				 是不可靠的无连接的协议，在数据发送前，因为不需要进行连接，所以可以进行
				 高效的数据传输。
				 "实时应用" ==> 电视直播
				 
		网络层: IP协议，给每一台联网的主机分配一个逻辑上的地址(编号)。
		
		网络接口层： 网卡以及网卡驱动，MAC地址(网卡物理地址)以及数据传输信道。
		
2，封装和拆包
	网络数据在两台主机之间到底是怎样传输的呢？
	
3，因特网(互联网)地址(IP地址)
	互联网上的每个接口(网卡)必须有一个唯一的internet地址(也称为IP地址)
	它是协议上的一个逻辑地址。
	IPV4 协议规定一个IP地址用一个无符号的32bits的整数来表示。也就是说有2^32个地址。
	那么这么多的地址，如何去管理呢？
	类似像日常生活中的座机号码，分"区号"和"主机号"
	IP地址也分为两个部分: 网络号 和 主机号 
		网络号：属于哪一个网络，不同网络里的主机不能直接通信。
		主机号: 某个网络里的主机的编号(也叫子网主机号)。
		
	那么网络号和主机号各占多少bit位呢? 
	分两步:(1)看你是哪类的地址 (2)看 netmask
	
		地址分类                		     IP地址范围                     私有地址范围 
	A: 0+网络号(7)+主机号(24)  			0.0.0.0~127.255.255.255       10.0.0.0 ~ 10.255.255.255
	B: 10+网络号(14)+主机号(16)         128.0.0.0~191.255.255.255     172.16.0.0~172.31.255.255
	C: 110+网络号(21)+主机号(8)         192.0.0.0~223.255.255.255     192.168.0.0~192.168.255.255
	D: 1110+多播组号(28)                224.0.0.0~239.255.255.255     232.0.0.0~232.255.255.255
	E: 11110 保留待用                   240.0.0.0~247.255.255.255     
	
	点分式写法: 把每个字节用十进制表示，用“.”分开.
	
		"子网掩码(nestmask)": 分为缺省子网掩码，自定义的子网掩码。子网掩码是用来确定网络号和主机号
							  在IP地址中各占多少位的。
		一般规定: 网络号在IP地址的连续高bit位(左)
		          主机号在IP地址的连续低bit位(右)
				  
				  IP地址位与上netmask得到的数值为网络号
				  IP地址位于上netmask的按位取反，得到主机号 
				  
		如: 192.168.31.66  ==》 netmask: 255.255.255.0
			网络号: 192.168.31.00
			主机号: 66
		
4,端口号
	
	TCP和UDP都是采用无符号16bits的端口号来识别不同的应用程序的。
	IP地址只能唯一标识网络中的主机，但每台主机上并不是只跑一个网络应用程序，
	它可以跑多个网络应用程序，而且网络应用从传输层来看可以分为TCP应用和UDP应用。
	所以为了区分这些不同的网络应用，故提出了端口号的概念。
	
	注意: TCP端口号和UDP端口号是独立的。
	
	==> 一台主机上的网络应用是由: IP地址 + 传输层协议(TCP/UDP) + 端口号 确定。
	
	端口号由 IANA(Internet Assigned Numbers Authority)管理:
	众所周知的端口号: 1~1023
		http(TCP应用，端口号: 80)
		ftp:(TCP应用，端口号: 21)
		tftp(UDP应用，端口号: 69)
		...
		
	注册端口: 1024~49151
	动态或私有端口:  49152~65535
	
5, 字节序
	在CPU内部数据是存放在寄存器(16bits,32bits,64bits)中，分高bit位和低bit位
	但是内存却是按字节来编号的， 0x3000800,0x3000801 
	那么如果一个寄存器的数据要存放到内存中，该怎么存放呢？
		1) 大端(Big-Endian)模式： 数据的高字节存放在内存的低地址存储单元
		2) 小端(Little-Endian)模式: 数据的低字节存放到内存的低地址存储单元
		
	我们怎么知道我们自己的处理器采用的是大端模式还是小端模式呢？
	==> 共用体
	
	网络字节序:
		网络字节序规定发送到网络上的数据统一采用大端模式的字节序。
		
		网络通信是在不同的主机之间进行通信，但我们发送一个整数的时候，如果都采用自己的字节序
		去处理就发生问题。
		因此所有的主机在进行网络通信时，都必须采用网络字节序。
		
6，socket
	
	socket 即套接字文件，是一种网络编程接口，一种特殊的文件描述符，并不限于TCP/IP协议。
	===> 独立于具体协议栈的网络编程接口，位于应用层与传输层之间。
	
	socket 类型:
	(1)SOCK_STREAM: 流式套接字
		主要针对的是 TCP传输层协议
	(2)SOCK_DGRAM: 数据报套接字
		主要针对的是 UDP传输层协议
	(3)SOCK_RAW: 原始套接字
		直接跳过传输层
		
作业:
	1, 网上搜索资料查询  局域网与广域网的区别
	2，网上搜索资源查询  DNS服务器的作用
	3, 网上搜索资料查询  集线器、路由器、交换机、网关，它们的概念与区别。
	
	
	 
	
	
	
	
		
		