1,程序
	程序是数据和指令的集合(程序 = 数据结构 + 算法)，一个程序的执行过程就是一个计算。
	数据：用来表示人们思维对象的抽象概念的物理表现叫做数据。
	指令: 数据处理的规则叫做指令。
	计算：对某一有限数据的集合所实施的、目的在于解决某一个问题的一组有限的操作(指令)
的集合，称为一个计算(computation)。
	计算机(computer)就是用指令来处理数据的。
	
2，程序的执行方式
	(1)顺序执行
		缺点: CPU利用率太低
	(2)并发执行(为了提高CPU的利用率)
		现代操作系统为了程序能实现并发执行，特地引入“进程”概念。
		
3，进程 
	什么是进程？
	进程是具有独立功能的程序关于某个数据集合上的一次运行活动。
	
4，程序与进程的区别
	(1)程序是静态的概念(是指令的有序集合)；进程是动态的概念(动态的产生和消亡)，
		进程是程序的一次运行过程。
	(2)进程是一个独立运行的活动单位；进程是总系统资源分配的基本单位。
	(3)一个程序可以对应多个进程。但是一个进程只对应一个程序。
	
5，进程的状态
	执行状态、就绪状态、阻塞状态
	
6，Linux进程地址空间布局
	在进程运行过程中，所需要的内存布局，在Linux操作系统对进程需要的内存进行分段(分类)管理，
	不同属性的内存需求，分在不同的内存区域(段)
	
7，前台进程和后台进程
	前台进程就是跟用户进行交互的进程，会占用终端。同理，后台进程不会占用终端的进程。
	前台进程用来实现大部分的功能和占用大量的资源，后台进程一般用来实现对前台进程的一个维护的作用，
	占用少量资源。
	
	(1)孤儿进程: 父进程已经退出的子进程，称为孤儿进程。孤儿进程由爷爷进程或者1号进程托管。
		僵尸进程: 子进程退出，父进程没有调用wait/waitpid进行收尸。用ps -ef命令可查看有 defunct标识
		守护进程: 后台执行用来管理维护的进程。
		
	(2)进程组
		父进程和子进程默认为同一进程组
		pid_t  getpgrp(void);//用来获取自身的组ID号
		int setpgid(pid_t pid, pid_t pgid);//用来把pid这个进程的组ID设置为pgid.
									//注意:这里的pid和pgid只能是自身或者是你的子进程
									
	(3)会话： 前台进程组和后台进程组的联系，是多个进程组的集合。
	
	
	如何实现后台运行呢？
	a.创建一个子进程，然后把父进程退出。则该子进程就变成了后台进程。
	b. ./hello  &             后台运行，依赖于终端
	c. nohup  ./hello &       后台运行，其不依赖于终端
									
	
	
		
	
	