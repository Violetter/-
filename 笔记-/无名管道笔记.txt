无名管道 PIPE:
	PIPE： 利用文件的接口方式来实现进程间通信
	PIPE就是一个文件(此文件不存在于外设中，而是在内存中)，操作PIPE就是
操作文件一样。
	PIPE只能用于有亲缘关系的进程间通信(要么你是我晚辈，要么我们有同一个祖宗)
	
	PIPE就是水管的意思，又名无名管道。
	
PIPE的特点:
	1，一端读，一端写
	2，按顺序读，不支持lseek
	3，内容读走了，就没有了
	4，存在于内存，随内核持续性
	5，只能用于有亲缘关系的进程间通信(why?)
	
在Linux，一个对象的生命周期:
	1) 随代码块持续性: 局部变量
	2) 随进程持续性: 全局变量，static局部变量
	3) 随内核持续性: 管道文件
	4) 随文件系统持续性:  文件
	
PIPE相关的API函数
1，创建一个管道
NAME
       pipe, pipe2 - create pipe

SYNOPSIS
       #include <unistd.h>

	pipe用来在内核中创建一个无名管道，只能用于有亲缘关系的进程间通信。
       int pipe(int pipefd[2]);
			@pipdfd: 是一个整形数组的首地址，用来保存该管道文件的两个文件描述符。
					一个是读的文件描述符，一个是写的文件描述符。
					pipefd[0]保存的是读的文件描述符
					pipefd[1]保存的是写的文件描述符
		返回值: 
			成功返回0
			失败返回-1,errno被设置
	注意:
		1)pipe创建的管道是阻塞方式的。如果读管道的时候，管道里没有数据，则会阻塞。
		2)当管道文件没有任何进程使用的时会自动关闭。

