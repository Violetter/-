1。如何创建？
 .c .h .so

 mkdir 
    src/
    inc/
    lib/
    msc/
    说明性文档，说明项目要注意和运行规范
    makefile
    ./game

2.解析
        （1）如何在开发板上显示一张图片
        （2）触摸屏的信息获取
        （3）串口通信

3.显示原理

    lcd（液晶显示屏）800*480

    开发板32位真彩色
    4个字节
    00000000 00000000 00000000 00000000
    A          R         G       B
    Alpha （透明度） 0 
    Red    （红色）
    G（绿色）
    B（蓝色）

    [0,255]
    00000000 11111111 00000000 00000000 最红  0x00ff0000
    00000000 00000000 11111111 00000000 最绿  0x0000ff00
    A<<24 | R<<16 | G<< 8| B<<0
    0xARGB


    1.open(/dev/fb0,);
    2.write(fd,buf,800*480*4);
    3.close
    4.交叉编译到板子上，赋权后运行
    
    练习1 开发板上显示喜欢的颜色
    练习2 开发板上显示三色旗   ???
    晚上练习3 开发板上显示喜欢颜色的圆


    内存映射：
    mmap();
       #include <sys/mman.h>

       void *mmap(void *addr, size_t length, int prot, int flags,
                  int fd, off_t offset);
        函数功能：将fd代表的文件映射到虚拟空间的地址中
        addr：address地址 空 NULL
        length：映射多大的空间 800*480*4
        prot：权限   
                PROT_READ
                PROT_WRITE
                PROT_EXEL
                PROT_READ | PROT_WRITE  这个
        flags：映射标志位
            公有：MAP_SHARED
            私有有：MAP_PRIVATE
        fd：要映射的文件
        offset：偏移量0 
        返回值：成功返回指针  
                失败返回NULL

       int munmap(void *addr, size_t length);
       解除映射
       addr：成功返回指针
       length：800*480*4
    映射成功后我们用mmap的返回指针对其赋值，进而对屏幕文件的缓冲区进行影响。
    int * p = mmap(xx,xx,x,.....);
        将第一个点的坐标进行设置为红色
        *p = 0x00ff0000;
        将二个点的坐标进行设置为红色
        *(p+1) = 0x00ff0000;
        将第（400，240）个点的坐标进行设置为红色
        *(p+240*800+400) = 0x00ff0000;
        将第（x，y）个点的坐标进行设置为红色
        *(p+y*800+x) = 0x00ff0000;

        为了将所有点上色
        void lcd_draw_point(int x,int y,int color,int *p)
        {
            if(x>=0 && x <800 && y >= 0 && y<480)
            {
                *(p+y*800+x) = color;
            }
        }

    练习1：用映射函数和画点函数将屏幕显示成你喜欢的颜色
    练习2：用映射函数和画点函数将屏幕显示成三色旗

汉字取模
    原理：像素点画点
    使用工具：点阵液晶取模.EXE
    该软件将汉字的模型用许多个“1”将其画出来，然后将01这种二进制的位代码，变成一个字节一个字节得到的字模信息。一个
    位代码控制着一个像素点，位代码是1，则用画点函数画出一个颜色为color的点
    见：
        01010101
        10101010
        10000000 

        练习：在开发板上显示自己的姓名
        作业：设计一个函数，用来显示任何一个十进制数据。
        预习:开发板显示bmp图片





        将今天的几个代码都自己敲一遍（尽量独立完成）
        作业1：开发板上显示喜欢颜色的圆
        作业2：设计一个函数，用来显示任何一个十进制数据。
            char number[10][w*h] = {};

            char *data  data
            nub[1]  nub[2] 

            1223
        void lcd_show_nub(int x,int y ,long nub, int color)
        {
            int count = 0;
            int n = nub;
            while(n)
            {
                n /10 ;
                count ++;
            }

            int wei=0,i;

            for( i = 0; i<count ; i++)
            {
                wei = nub% 10;
                lcd_drow_word(x+(count - i)*w,y,w,h,number[wei],color);
                nub /= 10;
            }
        }
        

     4.bmp图片的显示
        bmp：微软公司制定的一种未压缩的图片文件格式
            bitmap
        RGB

        bmp里面有什么？

        BITMAP文件头
            14字节
            bmp文件大小
            像素数组的偏移量 lseek


        DIB： 40字节
            位图宽度
                一行有多少像素点
                大小：4字节
                偏移量：0x12
                正/负    正：像素点就是从左-----》右
                            负：像素点就是从右-----》左
            位图高度
                一列有多少像素点
                大小：4字节
                偏移量：0x16
                正/负       正 从下到上  负 从上到下
            色深
                一个像素点有多大
                偏移:0x1c
                24 RBG   32 ARBG  
                大小：2字节
                depth/8 = 像素点大小
        调色板：可有可无   32 24 无

        像素数组：
                存储像素数据的
                偏移量：0x36 == 54
                大小：？

        “癞子”
        例子：width=3   depth = 24
            3*(24/8) = 9 
        “癞子”
        int laizi = 0;
        if(一行的字节数 % 4 ！= 0)
        {
            laizi = 4 - （一行的字节数 % 4）；
        }
        
        癞子只会影响我们的读取，不影响显示。

        练习：读取一张BMP文件的位图宽度，位图高度，色深。
        大小端
        大端模式 ：内存的低地址 存放 数据的高字节
        小端模式 ：内存的低地址 存放 数据的低字节

        daxiaoduan.c  判断编译器是哪种模式存储



                    1234
      正常：  010101011 111101011 110101011 010111111  
      小端：  010111111 110101011 111101011 010101011 
                                              010111111
                                    110101011 00000000
                        111101011  000000000 00000000  
            010101011   00000000 00000000 00000000 
            | 位或


    计算真正的像素素组大小：
            (abs(width)+laizi)*abs(hight)*(depth/8)
    流程：计算癞子数
            根据癞子数算出一行真正的字节数
            用真正的一行字节数*一列的字节数 = 像素数组的大小

        算出像素数组大小后读出像素数据进行上色。见show_bmp.c


    练习：在开发板上显示一张800*480的bmp图片;


    5.触摸事件的获取
    
    触摸屏也是文件：打开文件：/dev/input/event0我们就能获取触摸事件信息
    
    头文件：<linux/input.h>
    /dev/input/event0中维护的就是保存输入文件信息的结构体：
    struct  input__event{
        struct timeval time;//该事件发生的时间
        _u16 type;事件类型
                EV_KEY 按键事件
                EV_REL 鼠标事件
                EV_ABS 触摸事件
        _u16 code;//随着type的不同而不同
            if(type == EV_KEY)  BTN_TOUCH
            if(type == EV_REL) code 为REL_X REL_Y表示value的值是系x/y坐标
            if(type == EV_ABS) code  为ABS_X ABS_Y表示value的值是系x/y坐标
        _32 value;
            if(type == EV_KEY && code == BTN_TOUCH) 0/1 弹起/按下
            if(type == EV_REL && code == REL_X) value = x/y 表示相应的坐标轴的偏移量
            if(type == EV_ABS && code == ABS_X) value = x/y 默认坐标系(1024,600)
    }
    获取触摸信息流程：
            open文件/dev/input/event0
            读取数据到input__event结构体中
            通过解析获取到的结构体判断宏定义确定输入事件的类型
            得到输出坐标后输出。见touch.c

    练习1：写一个函数判断触摸事件是滑动还是点击
    练习2：获取手指在屏幕的滑动方向
    
    6.可能用到的一些函数
        播放音频
            madplay -Q 1.mp3

            system(madplay -Q 1.mp3 &); &表示后台播放
            后台播放停止：pkill -9 madplay
        随机数函数：
            srand(); rand();
            #include<stdlib>
            #inclide<time>

            srand(time(NULL));//把当前时间设置为随机种子
            int n = rand()%(n-m+1)+m;//n会在m~n中随机生成一个数

        延时函数：
            sleep();秒级延时函数
            usleep();微秒级延时函数

        线程函数===》并发：
            pthread_cread();

    作业：实现简单的电子相册功能 