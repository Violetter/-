makefile 是一个能够实现自动化编译工程文件的脚本。当执行make命令时就会找到makefile文件
然后根据它制定的规则去生成文件。
	
	make          ==>  没有指定文件名，则生成第一个目标文件
	make target   ==>  指定文件名，则生成target这个目标文件
	
	
makefile执行命令的格式

目标文件 : 依赖文件
<TAB>cmd1
<TAB>cmd2

在makefile里面，我们可以定义自己的变量，且变量是没有类型的，通通当作字符串来处理
给变量赋值，通常有如下几种方式:
	:=  简单赋值，"就地赋值"
	=   递归赋值，"向后展开赋值"
	+=  追加赋值，"在原内容后面添加，以空格隔开"
	?=  条件赋值，"当变量没有定义或没有值时，我们才给它赋值"
	
引用变量:  $(变量名)
	
四种赋值方法:
	(1)简单赋值。"就地赋值"
		B:=$(A)   //error,A没有定义。
		A:="1234"  
	(2)递归赋值。"向后展开赋值"
		C=$(D)    //right,因为变量D在后面有定义
		D:="1234"
	(3)追加赋值 
		A+="hello.c"
	(4)条件赋值。当变量没有定义或没有值时，我们才给它赋值
		A:="123"
		A?="234"
		
自动变量。make内置的变量，make赋予这些变量有特定的含义 
	$*  不包含扩展名的目标文件名称
	$@  目标文件的完整名称
	$+  所有的依赖文件，以空格隔开，可能包含重复的依赖文件
	$^  所有的不重复的依赖文件，以空格隔开 
	$<  第一个依赖文件的名称
	$?  所有时间戳比目标文件晚的依赖文件，并以空格隔开
	
makefile 允许定义并调用内置函数、自定义的函数:
	调用函数的格式:    $(函数名  函数参数列表)
	内置函数:
		(1)wildcard: 文件名展开函数，展开成一列所有符合由其参数描述的文件名，
				   文件名之间以空格隔开，返回展开后的文件名列表。
			wildcard 这个函数只带一个参数，指定文件名的通配方式。 
			
		eg: 
			$(wildcard  ./*.c)
			
		(2) patsubst: 模式字符串替换函数 
			$(patsubst  <from>,<to>,<text>)
		eg: $(patsubst %.c,%.o, "1.c 2.c 3.h")
		
		注意: 这两个函数只是可以得到.c或.o字符串，但是并没有产生.c或.o文件
			* 通配任意字符 
			% 通配任意字符，但是范围为本次make过程中所有出现的变量
			
作业:   取三角形内的整数点
	输入三个正整数坐标 (x0,y0),(x1,y1),(x2,y2)，可以构成一个三角形
	求给三角形内部和边上的所有整数点(坐标是整数的点)
	
	提示:
		穷举法
	
	
	
	
	
	
	
	
	
	
	
	
	
	